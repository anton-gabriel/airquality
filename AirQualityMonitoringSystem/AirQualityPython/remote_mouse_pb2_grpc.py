# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import remote_mouse_pb2 as remote__mouse__pb2


class RemoteMouseServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendMouseMovement = channel.unary_unary(
        '/RemoteMouseService/SendMouseMovement',
        request_serializer=remote__mouse__pb2.MouseMovementRequest.SerializeToString,
        response_deserializer=remote__mouse__pb2.MouseMovementResponse.FromString,
        )
    self.SendMouseClick = channel.unary_unary(
        '/RemoteMouseService/SendMouseClick',
        request_serializer=remote__mouse__pb2.MouseClickRequest.SerializeToString,
        response_deserializer=remote__mouse__pb2.MouseClickResponse.FromString,
        )


class RemoteMouseServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SendMouseMovement(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendMouseClick(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RemoteMouseServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendMouseMovement': grpc.unary_unary_rpc_method_handler(
          servicer.SendMouseMovement,
          request_deserializer=remote__mouse__pb2.MouseMovementRequest.FromString,
          response_serializer=remote__mouse__pb2.MouseMovementResponse.SerializeToString,
      ),
      'SendMouseClick': grpc.unary_unary_rpc_method_handler(
          servicer.SendMouseClick,
          request_deserializer=remote__mouse__pb2.MouseClickRequest.FromString,
          response_serializer=remote__mouse__pb2.MouseClickResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'RemoteMouseService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
