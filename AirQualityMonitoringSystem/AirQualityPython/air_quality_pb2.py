# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: air_quality.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='air_quality.proto',
  package='',
  syntax='proto3',
  serialized_options=_b('\252\002\tGenerated'),
  serialized_pb=_b('\n\x11\x61ir_quality.proto\"K\n\x12\x41irQualityResponse\x12\x0f\n\x07quality\x18\x01 \x01(\x01\x12$\n\x0b\x61ir_feature\x18\x02 \x01(\x0e\x32\x0f.AirFeatureType\"9\n\x11\x41irQualityRequest\x12$\n\x0b\x61ir_feature\x18\x01 \x01(\x0e\x32\x0f.AirFeatureType*^\n\x0e\x41irFeatureType\x12\x15\n\x11InvalidAirFeature\x10\x00\x12\x05\n\x01O\x10\x01\x12\x07\n\x03\x43O2\x10\x02\x12\x06\n\x02\x43O\x10\x03\x12\x0f\n\x0bTEMPERATURE\x10\x04\x12\x0c\n\x08HUMIDITY\x10\x05\x32\x8c\x01\n\x11\x41irQualityService\x12\x38\n\rGetAirQuality\x12\x12.AirQualityRequest\x1a\x13.AirQualityResponse\x12=\n\x0eGetAirFeatures\x12\x12.AirQualityRequest\x1a\x13.AirQualityResponse(\x01\x30\x01\x42\x0c\xaa\x02\tGeneratedb\x06proto3')
)

_AIRFEATURETYPE = _descriptor.EnumDescriptor(
  name='AirFeatureType',
  full_name='AirFeatureType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='InvalidAirFeature', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='O', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CO2', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CO', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEMPERATURE', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HUMIDITY', index=5, number=5,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=157,
  serialized_end=251,
)
_sym_db.RegisterEnumDescriptor(_AIRFEATURETYPE)

AirFeatureType = enum_type_wrapper.EnumTypeWrapper(_AIRFEATURETYPE)
InvalidAirFeature = 0
O = 1
CO2 = 2
CO = 3
TEMPERATURE = 4
HUMIDITY = 5



_AIRQUALITYRESPONSE = _descriptor.Descriptor(
  name='AirQualityResponse',
  full_name='AirQualityResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='quality', full_name='AirQualityResponse.quality', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='air_feature', full_name='AirQualityResponse.air_feature', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21,
  serialized_end=96,
)


_AIRQUALITYREQUEST = _descriptor.Descriptor(
  name='AirQualityRequest',
  full_name='AirQualityRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='air_feature', full_name='AirQualityRequest.air_feature', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=98,
  serialized_end=155,
)

_AIRQUALITYRESPONSE.fields_by_name['air_feature'].enum_type = _AIRFEATURETYPE
_AIRQUALITYREQUEST.fields_by_name['air_feature'].enum_type = _AIRFEATURETYPE
DESCRIPTOR.message_types_by_name['AirQualityResponse'] = _AIRQUALITYRESPONSE
DESCRIPTOR.message_types_by_name['AirQualityRequest'] = _AIRQUALITYREQUEST
DESCRIPTOR.enum_types_by_name['AirFeatureType'] = _AIRFEATURETYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AirQualityResponse = _reflection.GeneratedProtocolMessageType('AirQualityResponse', (_message.Message,), dict(
  DESCRIPTOR = _AIRQUALITYRESPONSE,
  __module__ = 'air_quality_pb2'
  # @@protoc_insertion_point(class_scope:AirQualityResponse)
  ))
_sym_db.RegisterMessage(AirQualityResponse)

AirQualityRequest = _reflection.GeneratedProtocolMessageType('AirQualityRequest', (_message.Message,), dict(
  DESCRIPTOR = _AIRQUALITYREQUEST,
  __module__ = 'air_quality_pb2'
  # @@protoc_insertion_point(class_scope:AirQualityRequest)
  ))
_sym_db.RegisterMessage(AirQualityRequest)


DESCRIPTOR._options = None

_AIRQUALITYSERVICE = _descriptor.ServiceDescriptor(
  name='AirQualityService',
  full_name='AirQualityService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=254,
  serialized_end=394,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetAirQuality',
    full_name='AirQualityService.GetAirQuality',
    index=0,
    containing_service=None,
    input_type=_AIRQUALITYREQUEST,
    output_type=_AIRQUALITYRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAirFeatures',
    full_name='AirQualityService.GetAirFeatures',
    index=1,
    containing_service=None,
    input_type=_AIRQUALITYREQUEST,
    output_type=_AIRQUALITYRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_AIRQUALITYSERVICE)

DESCRIPTOR.services_by_name['AirQualityService'] = _AIRQUALITYSERVICE

# @@protoc_insertion_point(module_scope)
