// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: air_quality.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Generated {

  /// <summary>Holder for reflection information generated from air_quality.proto</summary>
  public static partial class AirQualityReflection {

    #region Descriptor
    /// <summary>File descriptor for air_quality.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AirQualityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFhaXJfcXVhbGl0eS5wcm90byJLChJBaXJRdWFsaXR5UmVzcG9uc2USDwoH",
            "cXVhbGl0eRgBIAEoARIkCgthaXJfZmVhdHVyZRgCIAEoDjIPLkFpckZlYXR1",
            "cmVUeXBlIjkKEUFpclF1YWxpdHlSZXF1ZXN0EiQKC2Fpcl9mZWF0dXJlGAEg",
            "ASgOMg8uQWlyRmVhdHVyZVR5cGUqXgoOQWlyRmVhdHVyZVR5cGUSFQoRSW52",
            "YWxpZEFpckZlYXR1cmUQABIFCgFPEAESBwoDQ08yEAISBgoCQ08QAxIPCgtU",
            "RU1QRVJBVFVSRRAEEgwKCEhVTUlESVRZEAUyjAEKEUFpclF1YWxpdHlTZXJ2",
            "aWNlEjgKDUdldEFpclF1YWxpdHkSEi5BaXJRdWFsaXR5UmVxdWVzdBoTLkFp",
            "clF1YWxpdHlSZXNwb25zZRI9Cg5HZXRBaXJGZWF0dXJlcxISLkFpclF1YWxp",
            "dHlSZXF1ZXN0GhMuQWlyUXVhbGl0eVJlc3BvbnNlKAEwAUIMqgIJR2VuZXJh",
            "dGVkYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Generated.AirFeatureType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Generated.AirQualityResponse), global::Generated.AirQualityResponse.Parser, new[]{ "Quality", "AirFeature" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Generated.AirQualityRequest), global::Generated.AirQualityRequest.Parser, new[]{ "AirFeature" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum AirFeatureType {
    [pbr::OriginalName("InvalidAirFeature")] InvalidAirFeature = 0,
    [pbr::OriginalName("O")] O = 1,
    [pbr::OriginalName("CO2")] Co2 = 2,
    [pbr::OriginalName("CO")] Co = 3,
    [pbr::OriginalName("TEMPERATURE")] Temperature = 4,
    [pbr::OriginalName("HUMIDITY")] Humidity = 5,
  }

  #endregion

  #region Messages
  public sealed partial class AirQualityResponse : pb::IMessage<AirQualityResponse> {
    private static readonly pb::MessageParser<AirQualityResponse> _parser = new pb::MessageParser<AirQualityResponse>(() => new AirQualityResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AirQualityResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Generated.AirQualityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AirQualityResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AirQualityResponse(AirQualityResponse other) : this() {
      quality_ = other.quality_;
      airFeature_ = other.airFeature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AirQualityResponse Clone() {
      return new AirQualityResponse(this);
    }

    /// <summary>Field number for the "quality" field.</summary>
    public const int QualityFieldNumber = 1;
    private double quality_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    /// <summary>Field number for the "air_feature" field.</summary>
    public const int AirFeatureFieldNumber = 2;
    private global::Generated.AirFeatureType airFeature_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Generated.AirFeatureType AirFeature {
      get { return airFeature_; }
      set {
        airFeature_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AirQualityResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AirQualityResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Quality, other.Quality)) return false;
      if (AirFeature != other.AirFeature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Quality != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Quality);
      if (AirFeature != 0) hash ^= AirFeature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Quality != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Quality);
      }
      if (AirFeature != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AirFeature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Quality != 0D) {
        size += 1 + 8;
      }
      if (AirFeature != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AirFeature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AirQualityResponse other) {
      if (other == null) {
        return;
      }
      if (other.Quality != 0D) {
        Quality = other.Quality;
      }
      if (other.AirFeature != 0) {
        AirFeature = other.AirFeature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Quality = input.ReadDouble();
            break;
          }
          case 16: {
            AirFeature = (global::Generated.AirFeatureType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AirQualityRequest : pb::IMessage<AirQualityRequest> {
    private static readonly pb::MessageParser<AirQualityRequest> _parser = new pb::MessageParser<AirQualityRequest>(() => new AirQualityRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AirQualityRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Generated.AirQualityReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AirQualityRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AirQualityRequest(AirQualityRequest other) : this() {
      airFeature_ = other.airFeature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AirQualityRequest Clone() {
      return new AirQualityRequest(this);
    }

    /// <summary>Field number for the "air_feature" field.</summary>
    public const int AirFeatureFieldNumber = 1;
    private global::Generated.AirFeatureType airFeature_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Generated.AirFeatureType AirFeature {
      get { return airFeature_; }
      set {
        airFeature_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AirQualityRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AirQualityRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AirFeature != other.AirFeature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AirFeature != 0) hash ^= AirFeature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AirFeature != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AirFeature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AirFeature != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AirFeature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AirQualityRequest other) {
      if (other == null) {
        return;
      }
      if (other.AirFeature != 0) {
        AirFeature = other.AirFeature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AirFeature = (global::Generated.AirFeatureType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
