// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: sensors.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Generated {

  /// <summary>Holder for reflection information generated from sensors.proto</summary>
  public static partial class SensorsReflection {

    #region Descriptor
    /// <summary>File descriptor for sensors.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SensorsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1zZW5zb3JzLnByb3RvIk4KF1NlbnNvckFpclF1YWxpdHlSZXF1ZXN0EiQK",
            "C2Fpcl9mZWF0dXJlGAEgASgOMg8uQWlyRmVhdHVyZVR5cGUSDQoFdmFsdWUY",
            "AiABKAEiOgoYU2Vuc29yQWlyUXVhbGl0eVJlc3BvbnNlEh4KBnN0YXR1cxgB",
            "IAEoDjIOLlJlcXVlc3RTdGF0dXMiXwoYU2Vuc29yRW52aXJvbm1lbnRSZXF1",
            "ZXN0EjQKE2Vudmlyb25tZW50X2ZlYXR1cmUYASABKA4yFy5FbnZpcm9ubWVu",
            "dEZlYXR1cmVUeXBlEg0KBXZhbHVlGAIgASgBIjsKGVNlbnNvckVudmlyb25t",
            "ZW50UmVzcG9uc2USHgoGc3RhdHVzGAEgASgOMg4uUmVxdWVzdFN0YXR1cype",
            "Cg1SZXF1ZXN0U3RhdHVzEhgKFEludmFsaWRSZXF1ZXN0U3RhdHVzEAASDAoI",
            "UkVDRUlWRUQQARIMCghSRVNPTFZFRBACEgoKBkZBSUxFRBADEgsKB1RJTUVP",
            "VVQQBCo7Cg5BaXJGZWF0dXJlVHlwZRIVChFJbnZhbGlkQWlyRmVhdHVyZRAA",
            "EggKBGVDTzIQARIICgRUVk9DEAIqewoWRW52aXJvbm1lbnRGZWF0dXJlVHlw",
            "ZRIdChlJbnZhbGlkRW52aXJvbm1lbnRGZWF0dXJlEAASDwoLVEVNUEVSQVRV",
            "UkUQARIHCgNHQVMQAhIMCghIVU1JRElUWRADEgwKCFBSRVNTVVJFEAQSDAoI",
            "QUxUSVRVREUQBTKsAQoXU2Vuc29yQWlyUXVhbGl0eVNlcnZpY2USRQoOU2Vu",
            "ZEFpckZlYXR1cmUSGC5TZW5zb3JBaXJRdWFsaXR5UmVxdWVzdBoZLlNlbnNv",
            "ckFpclF1YWxpdHlSZXNwb25zZRJKCg9TZW5kQWlyRmVhdHVyZXMSGC5TZW5z",
            "b3JBaXJRdWFsaXR5UmVxdWVzdBoZLlNlbnNvckFpclF1YWxpdHlSZXNwb25z",
            "ZSgBMAEywQEKGFNlbnNvckVudmlyb25tZW50U2VydmljZRJPChZTZW5kRW52",
            "aXJvbm1lbnRGZWF0dXJlEhkuU2Vuc29yRW52aXJvbm1lbnRSZXF1ZXN0Ghou",
            "U2Vuc29yRW52aXJvbm1lbnRSZXNwb25zZRJUChdTZW5kRW52aXJvbm1lbnRG",
            "ZWF0dXJlcxIZLlNlbnNvckVudmlyb25tZW50UmVxdWVzdBoaLlNlbnNvckVu",
            "dmlyb25tZW50UmVzcG9uc2UoATABQgyqAglHZW5lcmF0ZWRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Generated.RequestStatus), typeof(global::Generated.AirFeatureType), typeof(global::Generated.EnvironmentFeatureType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Generated.SensorAirQualityRequest), global::Generated.SensorAirQualityRequest.Parser, new[]{ "AirFeature", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Generated.SensorAirQualityResponse), global::Generated.SensorAirQualityResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Generated.SensorEnvironmentRequest), global::Generated.SensorEnvironmentRequest.Parser, new[]{ "EnvironmentFeature", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Generated.SensorEnvironmentResponse), global::Generated.SensorEnvironmentResponse.Parser, new[]{ "Status" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RequestStatus {
    [pbr::OriginalName("InvalidRequestStatus")] InvalidRequestStatus = 0,
    [pbr::OriginalName("RECEIVED")] Received = 1,
    [pbr::OriginalName("RESOLVED")] Resolved = 2,
    [pbr::OriginalName("FAILED")] Failed = 3,
    [pbr::OriginalName("TIMEOUT")] Timeout = 4,
  }

  public enum AirFeatureType {
    [pbr::OriginalName("InvalidAirFeature")] InvalidAirFeature = 0,
    [pbr::OriginalName("eCO2")] ECo2 = 1,
    [pbr::OriginalName("TVOC")] Tvoc = 2,
  }

  public enum EnvironmentFeatureType {
    [pbr::OriginalName("InvalidEnvironmentFeature")] InvalidEnvironmentFeature = 0,
    [pbr::OriginalName("TEMPERATURE")] Temperature = 1,
    [pbr::OriginalName("GAS")] Gas = 2,
    [pbr::OriginalName("HUMIDITY")] Humidity = 3,
    [pbr::OriginalName("PRESSURE")] Pressure = 4,
    [pbr::OriginalName("ALTITUDE")] Altitude = 5,
  }

  #endregion

  #region Messages
  public sealed partial class SensorAirQualityRequest : pb::IMessage<SensorAirQualityRequest> {
    private static readonly pb::MessageParser<SensorAirQualityRequest> _parser = new pb::MessageParser<SensorAirQualityRequest>(() => new SensorAirQualityRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SensorAirQualityRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Generated.SensorsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SensorAirQualityRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SensorAirQualityRequest(SensorAirQualityRequest other) : this() {
      airFeature_ = other.airFeature_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SensorAirQualityRequest Clone() {
      return new SensorAirQualityRequest(this);
    }

    /// <summary>Field number for the "air_feature" field.</summary>
    public const int AirFeatureFieldNumber = 1;
    private global::Generated.AirFeatureType airFeature_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Generated.AirFeatureType AirFeature {
      get { return airFeature_; }
      set {
        airFeature_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private double value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SensorAirQualityRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SensorAirQualityRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AirFeature != other.AirFeature) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AirFeature != 0) hash ^= AirFeature.GetHashCode();
      if (Value != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Value);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AirFeature != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AirFeature);
      }
      if (Value != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AirFeature != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AirFeature);
      }
      if (Value != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SensorAirQualityRequest other) {
      if (other == null) {
        return;
      }
      if (other.AirFeature != 0) {
        AirFeature = other.AirFeature;
      }
      if (other.Value != 0D) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AirFeature = (global::Generated.AirFeatureType) input.ReadEnum();
            break;
          }
          case 17: {
            Value = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SensorAirQualityResponse : pb::IMessage<SensorAirQualityResponse> {
    private static readonly pb::MessageParser<SensorAirQualityResponse> _parser = new pb::MessageParser<SensorAirQualityResponse>(() => new SensorAirQualityResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SensorAirQualityResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Generated.SensorsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SensorAirQualityResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SensorAirQualityResponse(SensorAirQualityResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SensorAirQualityResponse Clone() {
      return new SensorAirQualityResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Generated.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Generated.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SensorAirQualityResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SensorAirQualityResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SensorAirQualityResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::Generated.RequestStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SensorEnvironmentRequest : pb::IMessage<SensorEnvironmentRequest> {
    private static readonly pb::MessageParser<SensorEnvironmentRequest> _parser = new pb::MessageParser<SensorEnvironmentRequest>(() => new SensorEnvironmentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SensorEnvironmentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Generated.SensorsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SensorEnvironmentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SensorEnvironmentRequest(SensorEnvironmentRequest other) : this() {
      environmentFeature_ = other.environmentFeature_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SensorEnvironmentRequest Clone() {
      return new SensorEnvironmentRequest(this);
    }

    /// <summary>Field number for the "environment_feature" field.</summary>
    public const int EnvironmentFeatureFieldNumber = 1;
    private global::Generated.EnvironmentFeatureType environmentFeature_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Generated.EnvironmentFeatureType EnvironmentFeature {
      get { return environmentFeature_; }
      set {
        environmentFeature_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private double value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SensorEnvironmentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SensorEnvironmentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnvironmentFeature != other.EnvironmentFeature) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EnvironmentFeature != 0) hash ^= EnvironmentFeature.GetHashCode();
      if (Value != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Value);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EnvironmentFeature != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EnvironmentFeature);
      }
      if (Value != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EnvironmentFeature != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EnvironmentFeature);
      }
      if (Value != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SensorEnvironmentRequest other) {
      if (other == null) {
        return;
      }
      if (other.EnvironmentFeature != 0) {
        EnvironmentFeature = other.EnvironmentFeature;
      }
      if (other.Value != 0D) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnvironmentFeature = (global::Generated.EnvironmentFeatureType) input.ReadEnum();
            break;
          }
          case 17: {
            Value = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SensorEnvironmentResponse : pb::IMessage<SensorEnvironmentResponse> {
    private static readonly pb::MessageParser<SensorEnvironmentResponse> _parser = new pb::MessageParser<SensorEnvironmentResponse>(() => new SensorEnvironmentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SensorEnvironmentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Generated.SensorsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SensorEnvironmentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SensorEnvironmentResponse(SensorEnvironmentResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SensorEnvironmentResponse Clone() {
      return new SensorEnvironmentResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Generated.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Generated.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SensorEnvironmentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SensorEnvironmentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SensorEnvironmentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::Generated.RequestStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
